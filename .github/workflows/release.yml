name: Release

on:
  workflow_run:
    workflows: ["Verify and Test"]
    branches: [main]
    types: 
      - completed

permissions:
  contents: write
  packages: write

jobs:
  tag:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version
        id: version
        run: |
          # Get latest tag or default to v0.0.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          # Parse version components
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
          
          # Check commit message for version bump indicators
          git log -1 --pretty=%B | grep -q "BREAKING CHANGE" && MAJOR=$((MAJOR + 1)) && MINOR=0 && PATCH=0
          git log -1 --pretty=%B | grep -q "feat:" && MINOR=$((MINOR + 1)) && PATCH=0
          git log -1 --pretty=%B | grep -q "fix:" && PATCH=$((PATCH + 1))
          
          # If no specific bump, increment patch
          if [ "$LATEST_TAG" = "v$MAJOR.$MINOR.$PATCH" ]; then
            PATCH=$((PATCH + 1))
          fi
          
          NEXT_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $LATEST_TAG"
          echo "New version: $NEXT_VERSION"

      - name: Create Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}

  release:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.version }}
          release_name: Release ${{ needs.tag.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## What's Changed
            ${{ github.event.head_commit.message }}
            
            For full changes, see the [commit history](https://github.com/${{ github.repository }}/commits/${{ needs.tag.outputs.version }}) 